// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Answer
    DMux8Way(in = load, sel = address, a = dmuxA, b = dmuxB, c = dmuxC, d = dmuxD, e = dmuxE, f = dmuxF, g = dmuxG, h = dmuxH);
    Register(in = in, load = dmuxA, out = regiA);
    Register(in = in, load = dmuxB, out = regiB);
    Register(in = in, load = dmuxC, out = regiC);
    Register(in = in, load = dmuxD, out = regiD);
    Register(in = in, load = dmuxE, out = regiE);
    Register(in = in, load = dmuxF, out = regiF);
    Register(in = in, load = dmuxG, out = regiG);
    Register(in = in, load = dmuxH, out = regiH);
    Mux8Way16(a = regiA, b = regiB, c = regiC, d = regiD, e = regiE, f = regiF, g = regiG, h = regiH, sel = address, out = out);
}